apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

ext.anko_version='0.10.8'

def APP_ID = "com.sun_asterisk.myfood"

def koin_version = '2.0.1'

def room_version = "2.2.1"

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "${APP_ID}"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "MAP_API_KEY", "\"${MAP_API_KEY}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:' + rootProject.supportAppCompatVersion
    implementation 'androidx.core:core-ktx:' + rootProject.coreKtxVersion
    implementation 'androidx.constraintlayout:constraintlayout:' + rootProject.constraintLayoutVersion
    testImplementation 'junit:junit:' + rootProject.junitVersion
    androidTestImplementation 'androidx.test:runner:' + rootProject.testRunnerVersion
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.testEspressoVersion

    // Design
    implementation 'androidx.cardview:cardview:' + rootProject.recyclerViewVersion
    implementation 'com.google.android.material:material:' + rootProject.materialVersion
    implementation 'androidx.recyclerview:recyclerview:' + rootProject.recyclerViewVersion
    implementation 'androidx.annotation:annotation:' + rootProject.annotationVersion

    // Google Play Services
    implementation 'com.google.android.gms:play-services-maps:' + rootProject.googlePlayServicesVersion
    implementation 'com.google.android.gms:play-services-location:' + rootProject.googlePlayServicesVersion
    implementation 'com.google.android.gms:play-services-places:' + rootProject.googlePlayServicesVersion

    // dependency injection
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"

    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version" // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    // Coroutine listeners for Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"

    // Anko SQLite
    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    // Connect to the world
    implementation 'com.squareup.retrofit2:converter-gson:' + rootProject.retrofitVersion
    implementation 'com.squareup.retrofit2:retrofit:' + rootProject.retrofitVersion
    implementation "com.squareup.okhttp3:okhttp:" + rootProject.okhttpVersion
    implementation "com.squareup.okhttp3:logging-interceptor:" + rootProject.okhttpVersion

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Other
    implementation "com.github.bumptech.glide:glide:" + rootProject.glideVersion
    implementation 'com.mikhaellopez:circularimageview:' + rootProject.circleimageviewVersion
    kapt "com.github.bumptech.glide:compiler:" + rootProject.glideVersion
    implementation 'com.github.ybq:Android-SpinKit:' + rootProject.spinKitVersion
}
